--[[ LUNA ]]--
local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/main/source.lua", true))()

-- [[ CREATE_WINDOW ]]--
getgenv().Window = Luna:CreateWindow({
    Name = "Muratt Hub",
    Subtitle = "Muratt",
    LogoID = "134267640139020",
    LoadingEnabled = true,
    LoadingTitle = "Muratt Hub",
    LoadingSubtitle = "by Hyper Developments",
    KeySystem = false,
    KeySettings = {
        Title = "Muratt Keys",
        Subtitle = "Key System",
        Note = "Please Enter Your Key To Use Example Hub",
        FileName = "Key",
        SaveKey = false,
        Key = {""}
    }
})

-- [[ START HOME ]]--
getgenv().Window:CreateHomeTab({
    SupportedExecutors = {},
    DiscordInvite = "https://discord.gg/DHx9UdMSwY",
    Icon = 1,
})

getgenv().Tab_main = getgenv().Window:CreateTab({
    Name = "Main",
    Icon = "view_in_ar",
    ImageSource = "Material",
    ShowTitle = true
})

getgenv().Tab_shop = getgenv().Window:CreateTab({
    Name = "Shop Purchase",
    Icon = "shopping_cart",
    ImageSource = "Material",
    ShowTitle = true
})

getgenv().Tab_teleport = getgenv().Window:CreateTab({
    Name = "Teleport",
    Icon = "location_on",
    ImageSource = "Material",
    ShowTitle = true
})

getgenv().autoBubbleSell = false
getgenv().autoBubble = false
getgenv().autoPurchaseFlavor = false
getgenv().autoPurchaseStorage = false
getgenv().autoDoggyJump = false
getgenv().autoWheelSpin = false
getgenv().autoPickup = false
getgenv().autoCollectGift = false

getgenv().flavorTable = {
    "Buble Gum", "Blueberry", "Cherry", "Pizza", "Watermelon",
    "Chocolate", "Contrast", "Gold", "Lemon", "Donut", "Swirl", "Molten"
}

getgenv().storageTable = {
    "Basic Gum", "Stretchy Gum", "Chewy Gum", "Epic Gum", "Ultra Gum",
    "Omega Gum", "Unreal Gum", "Cosmic Gum", "XL Gum", "Mega Gum", "Quantum Gum", 
    "Alien Gum", "Radioactive Gum", "Experiment #52"
}

task.spawn(function()
    while true do
        if getgenv().autoBubble then
            local args = { "BlowBubble" }
            game:GetService("ReplicatedStorage")
                :WaitForChild("Shared")
                :WaitForChild("Framework")
                :WaitForChild("Network")
                :WaitForChild("Remote")
                :WaitForChild("Event")
                :FireServer(unpack(args))
        end

        if getgenv().autoBubbleSell then
            local args = { "SellBubble" }
            game:GetService("ReplicatedStorage")
                :WaitForChild("Shared")
                :WaitForChild("Framework")
                :WaitForChild("Network")
                :WaitForChild("Remote")
                :WaitForChild("Event")
                :FireServer(unpack(args))
        end

        task.wait(0.1)
    end
end)

task.spawn(function()
    while true do
        if getgenv().autoDoggyJump then
            for i = 1, 3 do
                local args = {
                    [1] = "DoggyJumpWin",
                    [2] = i
                }

                game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Event"):FireServer(unpack(args))
                task.wait(1)
            end
            task.wait(720)
        end
        task.wait(1)
    end
end)

task.spawn(function()
    while true do
        if getgenv().autoWheelSpin then
            local args = { [1] = "WheelSpin" }
            game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Function"):InvokeServer(unpack(args))
            task.wait(1200)
        end
        task.wait(1)
    end
end)

task.spawn(function()
    while true do
        if getgenv().autoCollectGift then
            for i = 1,9 do

                local args = {
                    [1] = "ClaimPlaytime",
                    [2] = i
                }
    
                game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Function"):InvokeServer(unpack(args))
            end
        end
        task.wait(60)
    end
end)

task.spawn(function()
    while true do
        if getgenv().autoPurchaseFlavor then
            -- Loop through each flavor and automatically purchase it
            for _, flavor in pairs(getgenv().flavorTable) do
                local args = {
                    "GumShopPurchase",
                    flavor
                }
                local success, errorMsg = pcall(function()
                    game:GetService("ReplicatedStorage")
                        :WaitForChild("Shared")
                        :WaitForChild("Framework")
                        :WaitForChild("Network")
                        :WaitForChild("Remote")
                        :WaitForChild("Event")
                        :FireServer(unpack(args))
                end)

                task.wait(1) -- Wait between purchases to avoid spamming
            end
        end

        if getgenv().autoPurchaseStorage then
            -- Loop through each storage item and automatically purchase it
            for _, storage in pairs(getgenv().storageTable) do
                local args = {
                    "GumShopPurchase",
                    storage
                }
                local success, errorMsg = pcall(function()
                    game:GetService("ReplicatedStorage")
                        :WaitForChild("Shared")
                        :WaitForChild("Framework")
                        :WaitForChild("Network")
                        :WaitForChild("Remote")
                        :WaitForChild("Event")
                        :FireServer(unpack(args))
                end)

                task.wait(1) -- Wait between purchases to avoid spamming
            end
        end

        task.wait(1) -- Small delay before checking again
    end
end)

task.spawn(function()
    while true do
if getgenv().autoPickup then
    local rendered = workspace:WaitForChild("Rendered")
    local chunker = rendered:GetChildren()[12]
    if chunker then
        for _, v in pairs(chunker:GetChildren()) do
            if v:IsA("Model") then
                local basePart = v:FindFirstChildOfClass("BasePart")
                local args = { [1] = tostring(v.Name) }
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Pickups"):WaitForChild("CollectPickup"):FireServer(unpack(args))
            end
        end
    else
        warn("12. Chunker bulunamadƒ±!")
    end

end
task.wait(10)
end
end)

getgenv().Tab_main:CreateToggle({
    Name = "Auto Bubble Sell | üí∞",
    Description = "Automatically sells bubble if you own 1+ bubble",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoBubbleSell = Value
    end
})

getgenv().Tab_main:CreateToggle({
    Name = "Auto Bubble | üç¶",
    Description = "Automatically gives you bubble",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoBubble = Value
    end
})

getgenv().Tab_main:CreateToggle({
    Name = "Auto Wheel Spin | üé°",
    Description = "Automatically spins the wheel",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoWheelSpin = Value
    end
})

getgenv().Tab_main:CreateToggle({
    Name = "Auto Doggy Jump | üêï",
    Description = "Automatically makes the dog jump",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoDoggyJump = Value
    end
})

getgenv().Tab_main:CreateToggle({
    Name = "Auto Pickup | üõçÔ∏è",
    Description = "Automatically collects pickups",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoPickup = Value
    end
})

getgenv().Tab_main:CreateToggle({
    Name = "Auto Collect Gift | üéÅ",
    Description = "Automatically collects gifts in the game",
    CurrentValue = false,
    Callback = function(Value)
        getgenv().autoCollectGift = Value
    end
})

-- Shop Tab Dropdowns for Flavor and Storage Purchase
getgenv().Tab_shop:CreateDropdown({
    Name = "Flavor Purchase | üç¨",
    Description = "Buy selected flavor from the Gum Shop",
    Options = getgenv().flavorTable,
    CurrentOption = "Buble Gum",
    MultipleOptions = false,
    Callback = function(Selected)
        local args = {
            "GumShopPurchase",
            Selected
        }

        game:GetService("ReplicatedStorage")
            :WaitForChild("Shared")
            :WaitForChild("Framework")
            :WaitForChild("Network")
            :WaitForChild("Remote")
            :WaitForChild("Event")
            :FireServer(unpack(args))
    end
})

getgenv().Tab_shop:CreateDropdown({
    Name = "Storage Purchase | üéí",
    Description = "Buy selected Storage from the Gum Shop",
    Options = getgenv().storageTable,
    CurrentOption = "Basic Gum",
    MultipleOptions = false,
    Callback = function(Selected)
        local args = {
            "GumShopPurchase",
            Selected
        }

        game:GetService("ReplicatedStorage")
            :WaitForChild("Shared")
            :WaitForChild("Framework")
            :WaitForChild("Network")
            :WaitForChild("Remote")
            :WaitForChild("Event")
            :FireServer(unpack(args))
    end
})

getgenv().Tab_shop:CreateButton({
    Name = "Auto Purchase Flavor | üç¨",
    Description = "Automatically buy all flavors from the Gum Shop",
    Callback = function()
        getgenv().autoPurchaseFlavor = not getgenv().autoPurchaseFlavor
    end
})

getgenv().Tab_shop:CreateButton({
    Name = "Auto Purchase Storage | üéí",
    Description = "Automatically buy all storage from the Gum Shop",
    Callback = function()
        getgenv().autoPurchaseStorage = not getgenv().autoPurchaseStorage
    end
})

-- Teleport Tab Dropdown for Island Teleports
getgenv().Tab_teleport:CreateDropdown({
    Name = "Island Teleport | üåç",
    Description = "Teleport to selected island",
    Options = {"Floating Island", "Outer Space", "Twilight", "The Void", "Zen" },
    CurrentOption = "Floating Island",
    MultipleOptions = false,
    Callback = function(Selected)
        local paths = {
            ["Floating Island"] = "Workspace.Worlds.The Overworld.Islands.Floating Island.Island.Portal.Spawn",
            ["Outer Space"] = "Workspace.Worlds.The Overworld.Islands.Outer Space.Island.Portal.Spawn",
            ["Twilight"] = "Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn",
            ["The Void"] = "Workspace.Worlds.The Overworld.Islands.The Void.Island.Portal.Spawn",
            ["Zen"] = "Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn"
        }

        local path = paths[Selected]
        if path then
            local args = {
                "Teleport",
                path
            }

            game:GetService("ReplicatedStorage")
                :WaitForChild("Shared")
                :WaitForChild("Framework")
                :WaitForChild("Network")
                :WaitForChild("Remote")
                :WaitForChild("Event")
                :FireServer(unpack(args))
        end
    end
})
